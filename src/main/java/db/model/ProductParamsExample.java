package db.model;

import java.util.ArrayList;
import java.util.List;

public class ProductParamsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public ProductParamsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andParamNameIsNull() {
            addCriterion("PARAM_NAME is null");
            return (Criteria) this;
        }

        public Criteria andParamNameIsNotNull() {
            addCriterion("PARAM_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andParamNameEqualTo(String value) {
            addCriterion("PARAM_NAME =", value, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameNotEqualTo(String value) {
            addCriterion("PARAM_NAME <>", value, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameGreaterThan(String value) {
            addCriterion("PARAM_NAME >", value, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameGreaterThanOrEqualTo(String value) {
            addCriterion("PARAM_NAME >=", value, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameLessThan(String value) {
            addCriterion("PARAM_NAME <", value, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameLessThanOrEqualTo(String value) {
            addCriterion("PARAM_NAME <=", value, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameLike(String value) {
            addCriterion("PARAM_NAME like", value, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameNotLike(String value) {
            addCriterion("PARAM_NAME not like", value, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameIn(List<String> values) {
            addCriterion("PARAM_NAME in", values, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameNotIn(List<String> values) {
            addCriterion("PARAM_NAME not in", values, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameBetween(String value1, String value2) {
            addCriterion("PARAM_NAME between", value1, value2, "paramName");
            return (Criteria) this;
        }

        public Criteria andParamNameNotBetween(String value1, String value2) {
            addCriterion("PARAM_NAME not between", value1, value2, "paramName");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNull() {
            addCriterion("PRODUCT_ID is null");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNotNull() {
            addCriterion("PRODUCT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andProductIdEqualTo(Integer value) {
            addCriterion("PRODUCT_ID =", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotEqualTo(Integer value) {
            addCriterion("PRODUCT_ID <>", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThan(Integer value) {
            addCriterion("PRODUCT_ID >", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PRODUCT_ID >=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThan(Integer value) {
            addCriterion("PRODUCT_ID <", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThanOrEqualTo(Integer value) {
            addCriterion("PRODUCT_ID <=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdIn(List<Integer> values) {
            addCriterion("PRODUCT_ID in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotIn(List<Integer> values) {
            addCriterion("PRODUCT_ID not in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdBetween(Integer value1, Integer value2) {
            addCriterion("PRODUCT_ID between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PRODUCT_ID not between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andParamStrValueIsNull() {
            addCriterion("PARAM_STR_VALUE is null");
            return (Criteria) this;
        }

        public Criteria andParamStrValueIsNotNull() {
            addCriterion("PARAM_STR_VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andParamStrValueEqualTo(String value) {
            addCriterion("PARAM_STR_VALUE =", value, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueNotEqualTo(String value) {
            addCriterion("PARAM_STR_VALUE <>", value, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueGreaterThan(String value) {
            addCriterion("PARAM_STR_VALUE >", value, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueGreaterThanOrEqualTo(String value) {
            addCriterion("PARAM_STR_VALUE >=", value, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueLessThan(String value) {
            addCriterion("PARAM_STR_VALUE <", value, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueLessThanOrEqualTo(String value) {
            addCriterion("PARAM_STR_VALUE <=", value, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueLike(String value) {
            addCriterion("PARAM_STR_VALUE like", value, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueNotLike(String value) {
            addCriterion("PARAM_STR_VALUE not like", value, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueIn(List<String> values) {
            addCriterion("PARAM_STR_VALUE in", values, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueNotIn(List<String> values) {
            addCriterion("PARAM_STR_VALUE not in", values, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueBetween(String value1, String value2) {
            addCriterion("PARAM_STR_VALUE between", value1, value2, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamStrValueNotBetween(String value1, String value2) {
            addCriterion("PARAM_STR_VALUE not between", value1, value2, "paramStrValue");
            return (Criteria) this;
        }

        public Criteria andParamNumValueIsNull() {
            addCriterion("PARAM_NUM_VALUE is null");
            return (Criteria) this;
        }

        public Criteria andParamNumValueIsNotNull() {
            addCriterion("PARAM_NUM_VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andParamNumValueEqualTo(Integer value) {
            addCriterion("PARAM_NUM_VALUE =", value, "paramNumValue");
            return (Criteria) this;
        }

        public Criteria andParamNumValueNotEqualTo(Integer value) {
            addCriterion("PARAM_NUM_VALUE <>", value, "paramNumValue");
            return (Criteria) this;
        }

        public Criteria andParamNumValueGreaterThan(Integer value) {
            addCriterion("PARAM_NUM_VALUE >", value, "paramNumValue");
            return (Criteria) this;
        }

        public Criteria andParamNumValueGreaterThanOrEqualTo(Integer value) {
            addCriterion("PARAM_NUM_VALUE >=", value, "paramNumValue");
            return (Criteria) this;
        }

        public Criteria andParamNumValueLessThan(Integer value) {
            addCriterion("PARAM_NUM_VALUE <", value, "paramNumValue");
            return (Criteria) this;
        }

        public Criteria andParamNumValueLessThanOrEqualTo(Integer value) {
            addCriterion("PARAM_NUM_VALUE <=", value, "paramNumValue");
            return (Criteria) this;
        }

        public Criteria andParamNumValueIn(List<Integer> values) {
            addCriterion("PARAM_NUM_VALUE in", values, "paramNumValue");
            return (Criteria) this;
        }

        public Criteria andParamNumValueNotIn(List<Integer> values) {
            addCriterion("PARAM_NUM_VALUE not in", values, "paramNumValue");
            return (Criteria) this;
        }

        public Criteria andParamNumValueBetween(Integer value1, Integer value2) {
            addCriterion("PARAM_NUM_VALUE between", value1, value2, "paramNumValue");
            return (Criteria) this;
        }

        public Criteria andParamNumValueNotBetween(Integer value1, Integer value2) {
            addCriterion("PARAM_NUM_VALUE not between", value1, value2, "paramNumValue");
            return (Criteria) this;
        }

        public Criteria andParamTypeIsNull() {
            addCriterion("PARAM_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andParamTypeIsNotNull() {
            addCriterion("PARAM_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andParamTypeEqualTo(String value) {
            addCriterion("PARAM_TYPE =", value, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeNotEqualTo(String value) {
            addCriterion("PARAM_TYPE <>", value, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeGreaterThan(String value) {
            addCriterion("PARAM_TYPE >", value, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeGreaterThanOrEqualTo(String value) {
            addCriterion("PARAM_TYPE >=", value, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeLessThan(String value) {
            addCriterion("PARAM_TYPE <", value, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeLessThanOrEqualTo(String value) {
            addCriterion("PARAM_TYPE <=", value, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeLike(String value) {
            addCriterion("PARAM_TYPE like", value, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeNotLike(String value) {
            addCriterion("PARAM_TYPE not like", value, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeIn(List<String> values) {
            addCriterion("PARAM_TYPE in", values, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeNotIn(List<String> values) {
            addCriterion("PARAM_TYPE not in", values, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeBetween(String value1, String value2) {
            addCriterion("PARAM_TYPE between", value1, value2, "paramType");
            return (Criteria) this;
        }

        public Criteria andParamTypeNotBetween(String value1, String value2) {
            addCriterion("PARAM_TYPE not between", value1, value2, "paramType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated do_not_delete_during_merge Wed Sep 08 16:48:37 MSK 2021
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PRODUCT_PARAMS
     *
     * @mbg.generated Wed Sep 08 16:48:37 MSK 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}